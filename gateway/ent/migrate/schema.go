// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "user_admin", Type: field.TypeInt, Unique: true},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admins_users_admin",
				Columns:    []*schema.Column{AdminsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MeetingsColumns holds the columns for the "meetings" table.
	MeetingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "starts_at", Type: field.TypeTime},
		{Name: "ends_at", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// MeetingsTable holds the schema information for the "meetings" table.
	MeetingsTable = &schema.Table{
		Name:       "meetings",
		Columns:    MeetingsColumns,
		PrimaryKey: []*schema.Column{MeetingsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "nickname", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserMeetingsColumns holds the columns for the "user_meetings" table.
	UserMeetingsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "meeting_id", Type: field.TypeInt},
	}
	// UserMeetingsTable holds the schema information for the "user_meetings" table.
	UserMeetingsTable = &schema.Table{
		Name:       "user_meetings",
		Columns:    UserMeetingsColumns,
		PrimaryKey: []*schema.Column{UserMeetingsColumns[0], UserMeetingsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_meetings_user_id",
				Columns:    []*schema.Column{UserMeetingsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_meetings_meeting_id",
				Columns:    []*schema.Column{UserMeetingsColumns[1]},
				RefColumns: []*schema.Column{MeetingsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		MeetingsTable,
		UsersTable,
		UserMeetingsTable,
	}
)

func init() {
	AdminsTable.ForeignKeys[0].RefTable = UsersTable
	UserMeetingsTable.ForeignKeys[0].RefTable = UsersTable
	UserMeetingsTable.ForeignKeys[1].RefTable = MeetingsTable
}
