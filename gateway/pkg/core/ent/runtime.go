// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/isutare412/goarch/gateway/pkg/core/ent/admin"
	"github.com/isutare412/goarch/gateway/pkg/core/ent/meeting"
	"github.com/isutare412/goarch/gateway/pkg/core/ent/schema"
	"github.com/isutare412/goarch/gateway/pkg/core/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminMixin := schema.Admin{}.Mixin()
	adminMixinFields0 := adminMixin[0].Fields()
	_ = adminMixinFields0
	adminFields := schema.Admin{}.Fields()
	_ = adminFields
	// adminDescCreateTime is the schema descriptor for create_time field.
	adminDescCreateTime := adminMixinFields0[0].Descriptor()
	// admin.DefaultCreateTime holds the default value on creation for the create_time field.
	admin.DefaultCreateTime = adminDescCreateTime.Default.(func() time.Time)
	// adminDescUpdateTime is the schema descriptor for update_time field.
	adminDescUpdateTime := adminMixinFields0[1].Descriptor()
	// admin.DefaultUpdateTime holds the default value on creation for the update_time field.
	admin.DefaultUpdateTime = adminDescUpdateTime.Default.(func() time.Time)
	// admin.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	admin.UpdateDefaultUpdateTime = adminDescUpdateTime.UpdateDefault.(func() time.Time)
	// adminDescPhoneNumber is the schema descriptor for phone_number field.
	adminDescPhoneNumber := adminFields[0].Descriptor()
	// admin.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	admin.PhoneNumberValidator = adminDescPhoneNumber.Validators[0].(func(string) error)
	meetingMixin := schema.Meeting{}.Mixin()
	meetingMixinFields0 := meetingMixin[0].Fields()
	_ = meetingMixinFields0
	meetingFields := schema.Meeting{}.Fields()
	_ = meetingFields
	// meetingDescCreateTime is the schema descriptor for create_time field.
	meetingDescCreateTime := meetingMixinFields0[0].Descriptor()
	// meeting.DefaultCreateTime holds the default value on creation for the create_time field.
	meeting.DefaultCreateTime = meetingDescCreateTime.Default.(func() time.Time)
	// meetingDescUpdateTime is the schema descriptor for update_time field.
	meetingDescUpdateTime := meetingMixinFields0[1].Descriptor()
	// meeting.DefaultUpdateTime holds the default value on creation for the update_time field.
	meeting.DefaultUpdateTime = meetingDescUpdateTime.Default.(func() time.Time)
	// meeting.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	meeting.UpdateDefaultUpdateTime = meetingDescUpdateTime.UpdateDefault.(func() time.Time)
	// meetingDescTitle is the schema descriptor for title field.
	meetingDescTitle := meetingFields[0].Descriptor()
	// meeting.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	meeting.TitleValidator = meetingDescTitle.Validators[0].(func(string) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescNickname is the schema descriptor for nickname field.
	userDescNickname := userFields[0].Descriptor()
	// user.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	user.NicknameValidator = userDescNickname.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
}
